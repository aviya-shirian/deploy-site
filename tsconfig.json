{
    "compilerOptions": {
      "ignoreDeprecations": "5.0",
      "outDir": "dist",
      "target": "ES2018",
      "module": "CommonJS",
  //    "importHelpers": true,
      "removeComments": false,
      "preserveConstEnums": true,
      "resolveJsonModule": true,
      "suppressImplicitAnyIndexErrors": true,
      "sourceMap": true,
      "emitDeclarationOnly": false,
      "noEmit": false,
      "noEmitOnError": true,
      "declaration": true,
      "declarationMap": true,
      "allowJs": true,
      "checkJs": true,
      "composite": true,
  
      /* Strict Type-Checking Options */
      "strict": true,
      // enable typescript es5 features implementation
      "downlevelIteration": true,
      /* Enable all strict type-checking options. */
      "noImplicitAny": true,                    /* Raise error on expressions and declarations with an implied 'any' type. */
      "strictNullChecks": true,                 /* Enable strict null checks. */
      "strictFunctionTypes": true,              /* Enable strict checking of function types. */
      "strictBindCallApply": true,              /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
      "strictPropertyInitialization": true,     /* Enable strict checking of property initialization in classes. */
      "noImplicitThis": true,                   /* Raise error on 'this' expressions with an implied 'any' type. */
      // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
  
      /* Additional Checks */
      "noUnusedLocals": true,                    /* Report errors on unused locals. */
      "noUnusedParameters": false,               /* Report errors on unused parameters. */
      "noImplicitReturns": false,                /* Report error when not all code paths in function return a value. */
      "noFallthroughCasesInSwitch": true,        /* Report errors for fallthrough cases in switch statement. */
      "importsNotUsedAsValues": "error",
  
      /* Module Resolution Options */
      "moduleResolution": "node"                /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
      // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
      // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
      // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
      // "typeRoots": [],                       /* List of folders to include type definitions from. */
      // "types": ["node"]                      /* Type declaration files to be included in compilation. */,
      "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
      "esModuleInterop": true                   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
      // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
      // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */
  
      /* Advanced Options */
      "forceConsistentCasingInFileNames": true,
      "skipLibCheck": true
    },
    "compileOnSave": true
  }
  